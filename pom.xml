<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>

    <groupId>cn.keking</groupId>
    <artifactId>kkFileView-parent</artifactId>
    <version>4.3.0-SNAPSHOT</version>

    <properties>
        <java.version>1.8</java.version>

        <jodconverter.version>4.4.6</jodconverter.version>
        <spring.boot.version>2.4.2</spring.boot.version>
        <poi.version>5.2.2</poi.version>
        <xdocreport.version>1.0.6</xdocreport.version>
        <xstream.version>1.4.20</xstream.version>
        <junrar.version>7.5.4</junrar.version>
        <redisson.version>3.2.0</redisson.version>
        <sevenzipjbinding.version>16.02-2.01</sevenzipjbinding.version>
        <jchardet.version>1.0</jchardet.version>
        <antlr.version>2.7.7</antlr.version>
        <concurrentlinkedhashmap.version>1.4.2</concurrentlinkedhashmap.version>
        <rocksdb.version>5.17.2</rocksdb.version>
        <pdfbox.version>2.0.27</pdfbox.version>
        <jai-imageio.version>1.4.0</jai-imageio.version>
        <jbig2-imageio.version>3.0.4</jbig2-imageio.version>
        <galimatias.version>0.2.1</galimatias.version>
        <bytedeco.version>1.5.2</bytedeco.version>
        <opencv.version>4.1.2-1.5.2</opencv.version>
        <openblas.version>0.3.6-1.5.1</openblas.version>
        <ffmpeg.version>4.2.1-1.5.2</ffmpeg.version>
        <itextpdf.version>5.5.13.3</itextpdf.version>
        <httpclient.version>3.1</httpclient.version>
        <aspose-cad.version>23.1</aspose-cad.version>
        <bcprov-jdk15on.version>1.70</bcprov-jdk15on.version>

        <commons-cli.version>1.2</commons-cli.version>
        <commons-net.version>3.6</commons-net.version>
        <commons-lang3.version>3.7</commons-lang3.version>


        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <modules>
        <module>server</module>
    </modules>

    <name>kkFileView-parent</name>
    <description>专注文件在线预览服务</description>
    <url>https://github.com/kekingcn/kkFileView</url>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>

    <scm>
        <url>https://github.com/kekingcn/kkFileView</url>
        <connection>scm:git:git://github.com/kekingcn/kkFileView.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/kekingcn/kkFileView.git</developerConnection>
    </scm>

    <developers>
        <developer>
            <id>klboke</id>
            <name>kl</name>
            <email>g632104866@gmail.com</email>
            <url>http://www.kailing.pub</url>
        </developer>
        <developer>
            <id>gitchenjh</id>
            <name>chenjinghua</name>
            <email>842761733@qq.com</email>
        </developer>
    </developers>

    <issueManagement>
        <system>github</system>
        <url>https://github.com/kekingcn/kkFileView/issues</url>
    </issueManagement>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M7</version>
                <configuration>
                    <testFailureIgnore>true</testFailureIgnore>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.9.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <parameters>true</parameters>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.2.2</version>
                <configuration>
                    <!-- 镜像名称  -->
                    <imageName>registry.cn-hongkong.aliyuncs.coml/kumi-test/${project.artifactId}</imageName>
                    <!-- Dockerfile 文件目录 -->
                    <dockerDirectory>./</dockerDirectory>
                    <registryUrl>registry.cn-hongkong.aliyuncs.com</registryUrl>
                    <!-- docker远程服务地址 ，前提是docker服务器需开启远程访问-->
                    <dockerHost>http://localhost:2375</dockerHost>
                    <serverId>kumi-docker-registry</serverId>
                    <imageTags>
                        <imageTag>${project.version}</imageTag>
                        <imageTag>latest</imageTag>
                    </imageTags>
                    <!-- build完成后 push 远程仓库推送 -->
                    <pushImage>true</pushImage>
                    <!-- 覆盖已经存在的tag镜像 -->
                    <forceTags>true</forceTags>
                    <!-- 推送失败重试次数 -->
                    <retryPushCount>3</retryPushCount>
                    <!-- 推送超时时间 -->
                    <retryPushTimeout>5</retryPushTimeout>
                    <resources>
                        <resource>
                            <targetPath>/server/</targetPath>
                            <!-- 资源所在目录 -->
                            <directory>${project.build.directory}</directory>
                            <!-- 生成的.jar文件 -->
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                        <resource>
                            <targetPath>/server/</targetPath>
                            <!-- 资源所在目录 -->
                            <directory>${project.build.outputDirectory}</directory>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>**/*.woff</exclude>
                    <exclude>**/*.woff2</exclude>
                    <exclude>**/*.ttf</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*.woff</include>
                    <include>**/*.woff2</include>
                    <include>**/*.ttf</include>
                </includes>
            </resource>
        </resources>
    </build>
</project>
